# Github action workflow to run the Pester tests in the Unit directory

name: Run unit tests
run-name: Running unit tests for ${{ github.ref_name }} by @${{ github.actor }}

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize


jobs:
  UnitTest:
    name: Run Pester tests tagged 'unit'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Ensure we checkout the buildtools git submodule
          submodules: recursive

      - name: Install PSDepend2 from PSGallery
        run: |
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module PSDepend2 -Scope CurrentUser -Confirm:$false -Force

      - name: Configure the module cache
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\Documents\PowerShell\Modules
          key: ${{ runner.os }}-${{ hashFiles('**/requirements.psd1') }}
          restore-keys: |
            ${{ runner.os }}-psdepend-

      - name: Call PSDepend to install modules
        run: |
          Import-Module PSDepend2
          Invoke-PSDepend -Path "." -Recurse:$true -Tags 'ci' -Test | Format-Table DependencyName, Version, DependencyType

          Invoke-PSDepend -Path "." -Recurse:$true -Confirm:$false -Target 'CurrentUser' -Tags 'ci'

      - name: Install BuildTool
        # I don't want to publish BuildTool to the PSGallery yet, and I haven't figured out how
        # to use the Github nuget feed from powershell yet, so for the time being, I'm going to
        # include the .nupkg in the .build directory and install it from there....
        # gross? yes, but I don't know another way yet.
        run: |
          $buildtool = Get-InstalledModule -Name BuildTool
          if ($null -eq $buildtool) {
            Register-PSRepository -Name 'Local' -SourceLocation '.\build\requirements' -InstallationPolicy Trusted
            Install-Module BuildTool -Repository Local
            UnRegister-PSRepository -Name 'Local'
          }

      # The Configure task ensures that directories, files and variables
      # are present before the other tasks are run.
      - name: Configure the project
        run: Invoke-Build Configure

      # Run Pester Tests on files in source directory
      - name: Run UnitTests
        run: Invoke-Build UnitTest -CodeCov

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-report
          path: 'out/tests/pester.Unit*.xml'
          retention-days: 7
